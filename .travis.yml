dist: xenial
sudo: false
language: java

cache:
  directories:
    - $HOME/.m2

# Don't build release tags. This avoids publish conflicts because the version commit exists both on master and the release tag.
# See https://github.com/travis-ci/travis-ci/issues/1532
branches:
  except:
  - /^[0-9]/

  # safelist
  only:
  - master
  - develop
  - release

jdk:
  - openjdk8
  - openjdk9

before_install:
  # Parameters used during release
  - git config user.name "$GH_USER"
  - git config user.email "$GH_USER_EMAIL"

  # setup https authentication credentials, used by ./mvnw release:prepare
  - git config credential.helper "store --file=.git/credentials"
  - echo "https://$GH_TOKEN:@github.com" > .git/credentials

  # Update all git submodule (No need this manual submodule update ...)
  ## Uncomment the line below if the auto update submodule has not been activated by travis
  #- git submodule init && git submodule update --init --recursive --remote --merge

  ## Running this comment is mandatory to resolve the follwing issue: "No plugin found for prefix 'help' in the current project"
  ## Otherwise this command will fail: "./mvnw -o help:evaluate -N -Dexpression=project.version | sed -n '/^[0-9]/p'"
  ## CREDIT: https://stackoverflow.com/questions/26364608/why-is-there-the-error-no-plugin-found-for-prefix-help-in-the-current-project
  - mvn -X help:effective-pom

install:
  # Override default travis to use the maven wrapper
  - ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

after_success:
#  - mvn jacoco:report coveralls:report
  - mvn versions:display-dependency-updates
  - mvn versions:display-plugin-updates

jobs:
  include:
  - stage: develop
    name: "Build and Unit Testing the develop & PR branch"
    if: (branch = develop OR type = pull_request) AND commit_message !~ /^(prepare release ([0-9\.]+))$/
    jdk: openjdk8
    install: true
    script:
      - ./mvnw -B -nsu -s ./.mvn/settings.xml -N io.zipkin.centralsync-maven-plugin:centralsync-maven-plugin:sync -Dsync.dryRun -DskipTests=false

  - stage: snapshot
    name: "Deploy Snapshot to Maven repo"
    if: branch = master AND type != pull_request AND commit_message !~ /^(prepare release ([0-9\.]+))$/
    jdk: openjdk8
    install: true
    script:
      - ./mvnw -B -nsu -s ./.mvn/settings.xml -P release -DskipTests=true deploy

  - stage: release
    name: "Release to OSS SonaType"
    if: ((tag =~ /^[0-9\.]+$/ OR $TRAVIS_TAG =~ /^[0-9\.]+$/) OR $TRAVIS_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/ OR $TRAVIS_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/)
    jdk: openjdk8
    install: true
    script:
      - ./mvnw -B -nsu -s ./.mvn/settings.xml -P release -DskipTests=true deploy

  - stage: sync
    name: "Sync with Maven Central"
    #if: tag =~ /^[0-9\.]+$/
    if: ((tag =~ /^[0-9\.]+$/ OR $TRAVIS_TAG =~ /^[0-9\.]+$/) OR $TRAVIS_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/ OR $TRAVIS_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/)
    jdk: openjdk8
    install: true
    script:
      # this step can take an inordinate amount of time, so the wait should push it to 30 minutes
      - travis_wait 30 ./mvnw -B -nsu -s ./.mvn/settings.xml -P sonatype -N io.zipkin.centralsync-maven-plugin:centralsync-maven-plugin:sync

notifications:
  email:
    recipients:
      - "$GH_USER_EMAIL"
    on_success: change  # default: change
    on_failure: always  # default: always