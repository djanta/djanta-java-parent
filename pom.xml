<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2019 DJANTA, LLC (https://www.djanta.io)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed toMap in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.djanta</groupId>
    <artifactId>djanta-java-parent</artifactId>
    <version>0.0.4-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>djanta.io makes writing java microservice easier for everyone</description>

    <modules>
        <module>djanta-java-bom</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>

        <!-- specifying jvm arguments -->
        <jvm.options>-Duser.language=en</jvm.options>

        <!-- default bytecode version for src/main -->
        <main.java.version>1.8</main.java.version>
        <main.signature.artifact>java18</main.signature.artifact>

        <!-- default bytecode version for src/test -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <main.basedir>${project.basedir}</main.basedir>

        <com.fasterxml.jackson.version>2.9.8</com.fasterxml.jackson.version>
        <org.fluttercode.datafactory.version>0.8</org.fluttercode.datafactory.version>
        <org.mock-server.version>5.5.4</org.mock-server.version>
        <javax.json.version>1.1.4</javax.json.version>
        <io.reactivex.version>1.3.8</io.reactivex.version>
        <org.slf4j.version>1.7.26</org.slf4j.version>
        <junit.version>4.12</junit.version>
        <org.powermock.version>1.6.6</org.powermock.version>
        <org.mockito.version>2.7.5</org.mockito.version>
        <org.everit.json.version>1.4.1</org.everit.json.version>
        <org.jbehave.version>4.5.1</org.jbehave.version>
        <de.codecentric.version>1.2.0</de.codecentric.version>
        <net.sourceforge.cobertura.version>2.1.1</net.sourceforge.cobertura.version>
        <com.github.eirslett.version>1.8.0</com.github.eirslett.version>
        <com.amazonaws.version>1.11.641</com.amazonaws.version>
        <software.amazon.awssdk.version>2.9.9</software.amazon.awssdk.version>
        <com.google.http-client.version>1.32.1</com.google.http-client.version>
        <com.google.cloud.version>2.2.0</com.google.cloud.version>
        <org.freemarker.version>2.3.28</org.freemarker.version>
        <io.github.openfeign.version>10.2.3</io.github.openfeign.version>
        <org.bouncycastle.bcprov-jdk15on.version>1.63</org.bouncycastle.bcprov-jdk15on.version>
        <org.apache.cxf.version>3.3.3</org.apache.cxf.version>
        <javax.persistence.version>2.2</javax.persistence.version>
        <javax.resource.version>1.0</javax.resource.version>

        <!-- :: Maven plugin version configuration -->
        <maven.plugin.animal-sniffer.version>1.17</maven.plugin.animal-sniffer.version>
        <maven.plugin.compiler.version>3.8.0</maven.plugin.compiler.version>
        <maven.plugin.install.version>2.5.2</maven.plugin.install.version>
        <maven.plugin.source.version>3.0.1</maven.plugin.source.version>
        <maven.plugin.javadoc.version>3.0.1</maven.plugin.javadoc.version>
        <maven.plugin.gpg.version>1.6</maven.plugin.gpg.version>
        <maven.plugin.license.version>3.0</maven.plugin.license.version>
        <maven.plugin.jar.version>3.1.0</maven.plugin.jar.version>
        <maven.plugin.release.version>2.5.3</maven.plugin.release.version>
        <maven.plugin.bundle.version>4.0.0</maven.plugin.bundle.version>
        <maven.plugin.centralsync.version>0.1.0</maven.plugin.centralsync.version>
        <maven.plugin.surefire.version>2.22.0</maven.plugin.surefire.version>
        <maven.plugin.scm.version>1.11.2</maven.plugin.scm.version>
        <maven.plugin.versions.version>2.7</maven.plugin.versions.version>
        <maven.plugin.shade.version>3.2.1</maven.plugin.shade.version>
        <maven.plugin.clean.version>3.0.0</maven.plugin.clean.version>
        <maven.plugin.resources.version>3.0.2</maven.plugin.resources.version>
        <maven.plugin.enforcer.version>1.4.1</maven.plugin.enforcer.version>
        <maven.plugin.dependency.version>3.0.0</maven.plugin.dependency.version>
        <maven.plugin.site.version>0.12</maven.plugin.site.version>
        <maven.plugin.jacoco.version>0.8.4</maven.plugin.jacoco.version>
        <maven.plugin.buildnumber.version>1.4</maven.plugin.buildnumber.version>
        <maven.plugin.sortpom.version>2.8.0</maven.plugin.sortpom.version>
        <maven.plugin.build-helper.version>3.0.0</maven.plugin.build-helper.version>
        <maven.plugin.gpg.version>1.6</maven.plugin.gpg.version>
        <maven.plugin.deploy.version>2.8.2</maven.plugin.deploy.version>
        <maven.plugin.nexus-staging.version>1.6.7</maven.plugin.nexus-staging.version>
        <maven.plugin.snyk.version>1.2.0</maven.plugin.snyk.version>
        <maven.plugin.sundr.version>0.14.3</maven.plugin.sundr.version>
        <maven.plugin.takari.version>0.3.4</maven.plugin.takari.version>
        <maven.plugin.formatter.version>2.2.0</maven.plugin.formatter.version>
        <maven.plugin.assembly.version>3.1.1</maven.plugin.assembly.version>

        <!-- Plugins configurations section -->
        <mvn.license.header>.mvn/licenses/apache-2.0-header</mvn.license.header>
        <mvn.formatter.configfile>.mvn/coding/eclipse-java-style.xml</mvn.formatter.configfile>
        <mvn.bom.template.filepath>file://${project.basedir}/.mvn/resources/bom.xml</mvn.bom.template.filepath>
        <mvn.sortpom.file>.mvn/resources/pom-sorter.xml</mvn.sortpom.file>
        <mvn.sort.indent>4</mvn.sort.indent>
        <mvn.debuglevel>lines,vars,source</mvn.debuglevel>
        <mvn.license.holder>DJANTA, LLC (https://www.djanta.io)</mvn.license.holder>
        <mvn.tag.prefix>v</mvn.tag.prefix>
        <mvn.sonatype.id>sonatype</mvn.sonatype.id>
        <mvn.sonatype.url>https://oss.sonatype.org/</mvn.sonatype.url>
        <mvn.bintray.subject>djanta</mvn.bintray.subject>
        <mvn.bintray.repo>io.djanta</mvn.bintray.repo>
        <mvn.bintray.package>community</mvn.bintray.package>
        <mvn.release.goals>deploy</mvn.release.goals>
        <mvn.node.version>v6.17.1</mvn.node.version>
        <mvn.npm.version>2.15.9</mvn.npm.version>
        <mvn.yarn.version>v1.17.0</mvn.yarn.version>
        <mvn.nodejs.dist>https://nodejs.org/dist/</mvn.nodejs.dist>
        <mvn.yarn.dist>https://github.com/yarnpkg/yarn/releases/download/</mvn.yarn.dist>
        <mvn.npm.dist>https://registry.npmjs.org/npm/-/</mvn.npm.dist>

        <!-- Maven front end configurtion -->
        <mvn.frontend.workingdirectory>src/main/javascript/frontend</mvn.frontend.workingdirectory>
        <mvn.frontend.installdirectory>${project.build.directory}</mvn.frontend.installdirectory>
        <mvn.frontend.npm.enable>false</mvn.frontend.npm.enable>
        <mvn.frontend.yarn.enable>false</mvn.frontend.yarn.enable>
        <!-- run argument -->
        <mvn.frontend.npm.arugment>install</mvn.frontend.npm.arugment>
        <mvn.frontend.yarn.arugment>install</mvn.frontend.yarn.arugment>
        <mvn.frontend.bower.arugment>install</mvn.frontend.bower.arugment>
        <mvn.frontend.grunt.arugment>build</mvn.frontend.grunt.arugment>
        <mvn.frontend.gulp.arugment>build</mvn.frontend.gulp.arugment>
        <mvn.frontend.jspm.arugment>install</mvn.frontend.jspm.arugment>
        <mvn.frontend.karma.arugment></mvn.frontend.karma.arugment>
        <mvn.frontend.webpack.arugment>-p</mvn.frontend.webpack.arugment>
        <!-- Frontend config files -->
    </properties>

    <url>https://github.com/djanta/djanta-java-parent</url>
    <inceptionYear>2019</inceptionYear>

    <organization>
        <name>DJANTA, LLC</name>
        <url>https://www.djanta.io/</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/djanta/djanta-java-parent</url>
        <connection>scm:git:https://github.com/djanta/djanta-java-parent.git</connection>
        <developerConnection>scm:git:https://github.com/djanta/djanta-java-parent.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <id>stanislaska</id>
            <name>Stanislas Koffi ASSOUTOVI</name>
            <url>http://github.com/stanislaska</url>
            <organization>DJANTA, LLC</organization>
            <organizationUrl>http://djanta.io</organizationUrl>
            <roles>
                <role>Architect</role>
                <role>CTO</role>
                <role>Founder</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/djanta/djanta-java-parent/issues</url>
    </issueManagement>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.sourceforge.cobertura</groupId>
                <artifactId>cobertura-runtime</artifactId>
                <version>${net.sourceforge.cobertura.version}</version>
                <type>pom</type>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.cobertura</groupId>
                <artifactId>cobertura</artifactId>
                <version>${net.sourceforge.cobertura.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Testing unit dependencies -->
        <!--<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.fluttercode.datafactory</groupId>
            <artifactId>datafactory</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jbehave</groupId>
            <artifactId>jbehave-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>jbehave-junit-runner</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-client-java</artifactId>
            <scope>test</scope>
        </dependency>-->

        <!-- Runtime dependencies -->
        <!--<dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.everit.json</groupId>
            <artifactId>org.everit.json.schema</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>-->

        <!-- (com.fasterxml.jackson) - Core -->
        <!--<dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>-->

        <!-- (com.fasterxml.jackson) - Data Formats -->
        <!--<dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-avro</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-ion</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-properties</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-smile</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>-->

        <!-- (com.fasterxml.jackson) - Data Types -->
        <!--<dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hppc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jaxrs</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr353</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-pcollections</artifactId>
        </dependency>-->

        <!--<dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava</artifactId>
        </dependency>-->

    </dependencies>

    <build>
        <!-- <finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName> -->
        <finalName>${project.artifactId}-${project.version}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.plugin.deploy.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${maven.plugin.nexus-staging.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.plugin.shade.version}</version>
                </plugin>

                <!-- mvn -N io.takari:maven:wrapper -Dmaven=3.5.0 -->
                <plugin>
                    <groupId>io.takari</groupId>
                    <artifactId>maven</artifactId>
                    <version>${maven.plugin.takari.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.plugin.compiler.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.plugin.jar.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.plugin.surefire.version}</version>
                    <configuration>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <trimStackTrace>false</trimStackTrace>
                        <argLine>${jvm.options}</argLine>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.ow2.asm</groupId>
                            <artifactId>asm</artifactId>
                            <version>7.0-beta</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${maven.plugin.buildnumber.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${maven.plugin.jacoco.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.plugin.resources.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.plugin.enforcer.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.plugin.dependency.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.github</groupId>
                    <artifactId>site-maven-plugin</artifactId>
                    <version>${maven.plugin.site.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.plugin.clean.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${com.github.eirslett.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <serverId>${mvn.sonatype.id}</serverId>
                    <nexusUrl>${mvn.sonatype.url}</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
                <executions>
                    <!-- Ensure main source tree compiles to Java ${main.java.version} bytecode. -->
                    <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <source>${main.java.version}</source>
                            <target>${main.java.version}</target>
                            <compilerArgs>
                                <compilerArg>-Xlint:all</compilerArg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>${maven.plugin.animal-sniffer.version}</version>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>${main.signature.artifact}</artifactId>
                        <version>1.0</version>
                    </signature>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>7.0-beta</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Ensures checksums are added to published jars -->
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven.plugin.install.version}</version>
                <configuration>
                    <createChecksum>true</createChecksum>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.plugin.release.version}</version>
                <configuration>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>@{project.version}</tagNameFormat>

                    <!-- Beging: Extended configuration -->
                    <localCheckout>true</localCheckout>
                    <pushChanges>false</pushChanges>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <!-- <arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments> -->
                    <preparationGoals>clean install</preparationGoals>
                    <goals>${mvn.release.goals}</goals>
                    <!-- <arguments>-Ppackaging</arguments> -->
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-gitexe</artifactId>
                        <version>1.9.5</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <configuration>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <SCM-Revision>${buildNumber}</SCM-Revision>
                                <Bundle-Version>${project.version}-t${buildNumber}</Bundle-Version>
                                <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                                <Bundle-Vendor>DJANTA, LLC</Bundle-Vendor>
                            </manifestEntries>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer">
                            &lt;!&ndash; No comment yet&ndash;&gt;
                        </transformer>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->
            <!--
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <forceCreation>true</forceCreation>
                    <archive>
                        <manifestEntries>
                            <SCM-Revision>${buildNumber}</SCM-Revision>
                            <Bundle-Version>${project.version}-t${buildNumber}</Bundle-Version>
                            <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                            <Bundle-Vendor>DJANTA, LLC</Bundle-Vendor>
                        </manifestEntries>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <timestampFormat>{0,date,yyyy-MM-dd-HH:mm:ss}</timestampFormat>
                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                    <revisionOnScmFailure>true</revisionOnScmFailure>
                    <buildNumberPropertyName>buildNumber</buildNumberPropertyName>
                    <timestampPropertyName>timestamp</timestampPropertyName>
                    <scmBranchPropertyName>scmBranch</scmBranchPropertyName>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.zipkin.centralsync-maven-plugin</groupId>
                <artifactId>centralsync-maven-plugin</artifactId>
                <version>${maven.plugin.centralsync.version}</version>
                <configuration>
                    <subject>${mvn.bintray.subject}</subject>
                    <repo>${mvn.bintray.repo}</repo>
                    <packageName>${mvn.bintray.package}</packageName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>target</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven.plugin.bundle.version}</version>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${maven.plugin.license.version}</version>
                <configuration>
                    <!-- session.executionRootDirectory resolves properly even with nested modules -->
                    <header>${mvn.license.header}</header>
                    <excludes>
                        <exclude>**/.travis.yml</exclude>
                        <exclude>**/.editorconfig</exclude>
                        <exclude>**/.gitattributes</exclude>
                        <exclude>**/.gitignore</exclude>
                        <exclude>**/.mvn/**</exclude>
                        <exclude>**/travis/**</exclude>
                        <exclude>**/mvnw*</exclude>
                        <exclude>**/.idea/**</exclude>
                        <exclude>**/target/**</exclude>
                        <exclude>**/LICENSE</exclude>
                        <exclude>**/*.md</exclude>
                        <exclude>**/bnd.bnd</exclude>
                        <exclude>**/.MF</exclude>
                        <exclude>**/.variables</exclude>
                        <exclude>**/resources/license/header.txt</exclude>
                        <exclude>**/pom-old.xml</exclude>
                        <exclude>**/README</exclude>
                        <exclude>**/README.txt</exclude>
                        <exclude>**/*/*.jsp</exclude>
                        <exclude>**/*/*.jsf</exclude>
                    </excludes>
                    <strictCheck>true</strictCheck>
                </configuration>
                <executions>
                    <execution>
                        <id>compile-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>format-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <configuration>
                            <failIfUnknown>true</failIfUnknown>
                            <properties>
                                <company>${mvn.license.holder}</company>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin-git</artifactId>
                        <version>${maven.plugin.license.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.marvinformatics.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${maven.plugin.formatter.version}</version>
                <configuration>
                    <lineEnding>LF</lineEnding>
                    <configFile>${mvn.formatter.configfile}</configFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
                <version>${maven.plugin.sortpom.version}</version>
                <configuration>
                    <keepBlankLines>true</keepBlankLines>
                    <lineSeparator>\n</lineSeparator>
                    <sortOrderFile>${mvn.sortpom.file}</sortOrderFile>
                    <createBackupFile>false</createBackupFile>
                    <nrOfIndentSpace>${mvn.sort.indent}</nrOfIndentSpace>
                </configuration>
                <executions>
                    <execution>
                        <id>format</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sort</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--<plugin>
                <groupId>io.sundr</groupId>
                <artifactId>sundr-maven-plugin</artifactId>
                <version>${maven.plugin.sundr.version}</version>
                <inherited>false</inherited>
                <configuration>
                    <bomTemplateUrl>${mvn.bom.template.filepath}</bomTemplateUrl>
                    <boms>
                        <bom>
                            <artifactId>djanta-bom</artifactId>
                            <name>DJANTA (Bill Of Materials)</name>
                            <properties>
                                <license.skip>true</license.skip>
                            </properties>
                            <modules>
                                <includes>
                                    <include>io.djanta:*</include>
                                </includes>
                            </modules>
                        </bom>
                    </boms>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-bom</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.sundr</groupId>
                        <artifactId>sundr-codegen</artifactId>
                        <version>${maven.plugin.sundr.version}</version>
                        <exclusions>
                            <exclusion>
                                <groupId>com.sun</groupId>
                                <artifactId>tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven.plugin.versions.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>${maven.plugin.scm.version}</version>
                <configuration>
                    <tag>${mvn.tag.prefix}${project.version}</tag>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedPlugins>
                                    <level>WARN</level>
                                    <!--excludes>
                                      <exclude>org.apache.maven.plugins:maven-verifier-plugin</exclude>
                                    </excludes-->
                                    <message>Please consider using the maven-invoker-plugin
                                        (http://maven.apache.org/plugins/maven-invoker-plugin/)!</message>
                                </bannedPlugins>
                                <requireMavenVersion>
                                    <version>3.3</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[${main.java.version},12)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <!--
            <properties>
                <mvn.bom.template.filepath>file:///${project.basedir}/src/config/bom.xml</mvn.bom.template.filepath>
            </properties>
            -->
        </profile>
        <profile>
            <id>sonatype</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <!--
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven.plugin.gpg.version}</version>
                        <executions>
                            <execution>
                                <id>sign-release-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            -->
            <repositories>
                <repository>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                    <id>central1</id>
                    <url>http://repo1.maven.org/maven2</url>
                </repository>
                <repository>
                    <releases>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                    <id>central2</id>
                    <url>http://repo2.maven.org/maven2</url>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <releases>
                        <enabled>false</enabled>
                        <checksumPolicy>fail</checksumPolicy>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                        <checksumPolicy>fail</checksumPolicy>
                    </snapshots>
                    <id>central1</id>
                    <url>http://repo1.maven.org/maven2</url>
                </pluginRepository>
                <pluginRepository>
                    <releases>
                        <enabled>false</enabled>
                        <updatePolicy>never</updatePolicy>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                        <updatePolicy>never</updatePolicy>
                    </snapshots>
                    <id>central2</id>
                    <url>http://repo2.maven.org/maven2</url>
                </pluginRepository>
            </pluginRepositories>
            <distributionManagement>
                <repository>
                    <id>sonatype</id>
                    <url>${mvn.sonatype.url}service/local/staging/deploy/maven2/</url>
                </repository>
                <snapshotRepository>
                    <id>sonatype</id>
                    <url>${mvn.sonatype.url}content/repositories/snapshots</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
        <profile>
            <id>bintray</id>
            <repositories>
                <repository>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                    <id>central</id>
                    <url>https://repo1.maven.org/maven2</url>
                </repository>
            </repositories>
            <distributionManagement>
                <repository>
                    <id>bintray</id>
                    <name>io.djanta</name>
                    <url>https://api.bintray.com/maven/${mvn.bintray.subject}/${mvn.bintray.repo}/${mvn.bintray.package}/;publish=1</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>github</id>
            <repositories>
                <repository>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                    <id>central</id>
                    <url>https://repo1.maven.org/maven2</url>
                </repository>
                <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/djanta</url>
                </repository>
            </repositories>
            <distributionManagement>
                <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/djanta/${project.artifactId}</url>
                </repository>
            </distributionManagement>
        </profile>
        <profile>
            <id>format</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.marvinformatics.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <version>${maven.plugin.formatter.version}</version>
                        <configuration>
                            <lineEnding>LF</lineEnding>
                            <configFile>${mvn.formatter.configfile}</configFile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate-only</id>
                                <goals>
                                    <goal>validate</goal>
                                </goals>
                                <phase>initialize</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>shade</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-shade-plugin</artifactId>
                            <version>${maven.plugin.shade.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <!--
                                    <transformers>
                                        <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <manifestEntries>
                                                <Main-Class></Main-Class>
                                            </manifestEntries>
                                        </transformer>
                                    </transformers>
                                    -->
                                    <!--
                                    <artifactSet></artifactSet>
                                    -->
                                    <outputFile>${project.build.directory}/${project.artifactId}-fat.jar</outputFile>
                                    <filters>
                                        <filter>
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mockserver</id>
            <activation>
                <property>
                    <name>skipTests</name>
                    <value>false</value>
                </property>
            </activation>
            <properties>
                <mockserver-maven-plugin.version>5.5.1</mockserver-maven-plugin.version>
                <minPortNumber>1099</minPortNumber>
                <maxPortNumber>5000</maxPortNumber>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.mock-server</groupId>
                            <artifactId>mockserver-maven-plugin</artifactId>
                            <version>${mockserver-maven-plugin.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${maven.plugin.build-helper.version}</version>
                        <executions>
                            <execution>
                                <id>reserve-ports</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <portNames>
                                        <portName>org.mock-server.port</portName>
                                    </portNames>
                                    <minPortNumber>${minPortNumber}</minPortNumber>
                                    <maxPortNumber>${maxPortNumber}</maxPortNumber>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.mock-server</groupId>
                        <artifactId>mockserver-maven-plugin</artifactId>
                        <configuration>
                            <serverPort>${org.mock-server.port}</serverPort>
                            <logLevel>DEBUG</logLevel>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.mock-server</groupId>
                                <artifactId>mockserver-client-java</artifactId>
                                <version>${org.mock-server.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>process-test-classes</id>
                                <goals>
                                    <goal>runForked</goal>
                                </goals>
                                <phase>process-test-classes</phase>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>stopForked</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.mockserver.maven.StopMockServerTestListener</value>
                                </property>
                            </properties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <version>${maven.plugin.source.version}</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${maven.plugin.javadoc.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <!-- Creates source jar -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <failOnError>false</failOnError>
                            <additionalparam>-Xdoclint:all</additionalparam>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!--
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-plugin-versions</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    -->
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <failOnError>false</failOnError>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependency-updates-report</report>
                                    <report>plugin-updates-report</report>
                                    <report>property-updates-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <!-- GPG Signature on release -->
        <profile>
            <id>gpg</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-gpg-plugin</artifactId>
                            <version>${maven.plugin.gpg.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <phase>verify</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Snyk vulnerability check -->
        <profile>
            <id>snyk</id>
            <activation>
                <property>
                    <name>SNYK_TOKEN</name>
                </property>
            </activation>
            <properties>
                <io.snyk.failOnSeverity>medium</io.snyk.failOnSeverity>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>io.snyk</groupId>
                            <artifactId>snyk-maven-plugin</artifactId>
                            <version>${maven.plugin.snyk.version}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>io.snyk</groupId>
                        <artifactId>snyk-maven-plugin</artifactId>
                        <inherited>false</inherited>
                        <configuration>
                            <apiToken>${SNYK_TOKEN}</apiToken>
                            <failOnSeverity>${io.snyk.failOnSeverity}</failOnSeverity>
                        </configuration>
                        <executions>
                            <execution>
                                <id>snyk-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                            <execution>
                                <id>snyk-monitor</id>
                                <goals>
                                    <goal>monitor</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Site Publication -->
        <profile>
            <id>site</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>3.3</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.github</groupId>
                        <artifactId>site-maven-plugin</artifactId>
                        <configuration>
                            <message>Building site for ${project.version}</message>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>site</goal>
                                </goals>
                                <phase>deploy</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- FrontEnd tools configuration -->
        <profile>
            <id>frontend:npm</id>
            <activation>
                <property>
                    <name>mvn.frontend.npm.enable</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/package.json</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>npm-run</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>${mvn.frontend.npm.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:yarn</id>
            <activation>
                <property>
                    <name>mvn.frontend.yarn.enable</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/package.json</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <yarnVersion>${mvn.yarn.version}</yarnVersion>

                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <yarnDownloadRoot>${mvn.yarn.dist}</yarnDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-yarn</id>
                                <goals>
                                    <goal>install-node-and-yarn</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>yarn-run</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>${mvn.frontend.yarn.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:bower</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/bower.json</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>bower-run</id>
                                <goals>
                                    <goal>bower</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>${mvn.frontend.bower.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:grunt</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/Gruntfile.js</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>grunt-build</id>
                                <goals>
                                    <goal>grunt</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>${mvn.frontend.grunt.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:gulp</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/gulpfile.js</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>gulp-build</id>
                                <goals>
                                    <goal>gulp</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>${mvn.frontend.gulp.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:jspm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/gulpfile.js</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>jspm-build</id>
                                <goals>
                                    <goal>jspm</goal>
                                </goals>
                                <!--<phase>generate-resources</phase>-->
                                <configuration>
                                    <arguments>${mvn.frontend.jspm.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:karma</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/gulpfile.js</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>karma-build</id>
                                <goals>
                                    <goal>karma</goal>
                                </goals>
                                <phase>test</phase>
                                <configuration>
                                    <!-- <arguments>${mvn.frontend.karma.arugment}</arguments> -->
                                    <karmaConfPath>src/test/javascript/karma.conf.ci.js</karmaConfPath>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>frontend:webpack</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-dont-exist</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesDontExist>
                                            <files>
                                                <file>${mvn.frontend.workingdirectory}/webpack.config.js</file>
                                            </files>
                                        </requireFilesDontExist>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>${mvn.node.version}</nodeVersion>
                            <npmVersion>${mvn.npm.version}</npmVersion>
                            <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
                            <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
                            <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
                            <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>install-node-and-npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                            </execution>
                            <execution>
                                <id>webpack-build</id>
                                <goals>
                                    <goal>webpack</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>${mvn.frontend.webpack.arugment}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Development Integration Test-->
        <profile>
            <id>dit</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <include>**/*DitTest</include>
                                <include>**/*DITTest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!--
                                surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible
                                -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Framework & Feature Integration Test-->
        <profile>
            <id>fit</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <include>**/*FitTest</include>
                                <include>**/*FITTest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!--
                                    surefire uses ASM to do some bytecode magic... need to bump version to be java
                                    11 compatible
                                -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Pre Developement Integration Test -->
        <profile>
            <id>predit</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <!-- Include all development Integration testing -->
                                <include>**/*DitTest</include>
                                <include>**/*DITTest</include>

                                <!-- Include all (Functional, Framework & Feature) Integration testing -->
                                <include>**/*FitTest</include>
                                <include>**/*FITTest</include>

                                <!-- Include any other Pre Integration testing -->
                                <include>**/*PreditTest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!-- surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- User Acceptance Test-->
        <profile>
            <id>uat</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <!--
                                    Include all User Acceptance testing
                                -->
                                <include>**/*UatTest</include>
                                <include>**/*UATTest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!--
                                surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible
                                -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- QA Test -->
        <profile>
            <id>qa</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <include>**/*QaTest</include>
                                <include>**/*QATest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!--
                                surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible
                                -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Staging Test -->
        <profile>
            <id>staging</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <!--
                                    Include all User Acceptance testing
                                -->
                                <include>**/*UatTest</include>
                                <include>**/*UATTest</include>

                                <!--
                                    Include all Quality (assurance) Acceptance testing
                                -->
                                <include>**/*QaTest</include>
                                <include>**/*QATest</include>

                                <!--
                                    Include any other Staging Integration testing
                                -->
                                <include>**/*StagingTest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!-- surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Infrastructure automatiion Test -->
        <profile>
            <id>iat</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <trimStackTrace>false</trimStackTrace>
                            <argLine>${jvm.options}</argLine>
                            <includes>
                                <include>**/*IatTest</include>
                                <include>**/*IATTest</include>
                            </includes>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <!-- surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible -->
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>7.0-beta</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
