<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2019-2020 DJANTA, LLC (https://www.djanta.io)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed toMap in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.djanta</groupId>
  <artifactId>djanta-java-parent</artifactId>
  <version>1.1.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <description>djanta.io makes writing java microservice easier for everyone</description>

  <modules>
    <module>bom</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>

    <!-- specifying jvm arguments -->
    <jvm.options>-Duser.language=en</jvm.options>

    <!-- default bytecode version for src/main -->
    <main.signature.artifact>java18</main.signature.artifact>

    <!-- default bytecode version for src/test -->
    <main.java.version>1.8</main.java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <main.basedir>${project.basedir}</main.basedir>

    <com.fasterxml.jackson.version>2.10.1</com.fasterxml.jackson.version>
    <org.fluttercode.datafactory.version>0.8</org.fluttercode.datafactory.version>
    <org.mock-server.version>5.8.1</org.mock-server.version>
    <javax.json.version>1.1.4</javax.json.version>
    <io.reactivex.version>1.3.8</io.reactivex.version>
    <org.slf4j.version>1.7.28</org.slf4j.version>
    <junit.version>4.12</junit.version>
    <org.powermock.version>2.0.2</org.powermock.version>
    <org.mockito.version>2.7.5</org.mockito.version>
    <org.mockito.all.version>2.0.2-beta</org.mockito.all.version>
    <org.everit.json.version>1.4.1</org.everit.json.version>
    <org.jbehave.version>4.5.1</org.jbehave.version>
    <de.codecentric.version>1.2.0</de.codecentric.version>
    <net.sourceforge.cobertura.version>2.1.1</net.sourceforge.cobertura.version>
    <com.github.eirslett.version>1.8.0</com.github.eirslett.version>
    <com.amazonaws.version>1.11.641</com.amazonaws.version>
    <software.amazon.awssdk.version>2.9.9</software.amazon.awssdk.version>
    <com.google.http-client.version>1.32.1</com.google.http-client.version>
    <com.google.cloud.version>2.2.0</com.google.cloud.version>
    <org.freemarker.version>2.3.28</org.freemarker.version>
    <io.github.openfeign.version>10.2.3</io.github.openfeign.version>
    <org.bouncycastle.bcprov-jdk15on.version>1.63</org.bouncycastle.bcprov-jdk15on.version>
    <org.apache.cxf.version>3.3.3</org.apache.cxf.version>
    <javax.persistence.version>2.2</javax.persistence.version>
    <javax.resource.version>1.0</javax.resource.version>
    <javax.ws.rs.version>2.1.1</javax.ws.rs.version>
    <javax.xml.ws.version>2.3.1</javax.xml.ws.version>
    <javax.xml.soap.version>1.4.0</javax.xml.soap.version>
    <org.jmockit.version>1.48</org.jmockit.version>
    <com.github.tomakehurst.version>2.25.0</com.github.tomakehurst.version>
    <org.hamcrest.version>2.1</org.hamcrest.version>
    <com.github.stefanbirkner.version>1.19.0</com.github.stefanbirkner.version>
    <org.assertj.version>3.13.2</org.assertj.version>
    <net.sourceforge.htmlcleaner.version>2.23</net.sourceforge.htmlcleaner.version>
    <com.google.code.gson.version>2.8.5</com.google.code.gson.version>
    <javax.json.version>1.1.4</javax.json.version>
    <org.json.version>20190722</org.json.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <org.apache.commons.version>3.9</org.apache.commons.version>
    <org.apache.collections4.version>4.4</org.apache.collections4.version>
    <org.apache.text.version>1.8</org.apache.text.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-codec.version>1.13</commons-codec.version>
    <commons-logging.version>1.2</commons-logging.version>
    <commons-crypto.version>1.0.0</commons-crypto.version>
    <commons-beanutils.version>1.9.4</commons-beanutils.version>
    <org.apache.commons.compress.version>1.19</org.apache.commons.compress.version>
    <org.apache.commons.csv.version>1.7</org.apache.commons.csv.version>
    <org.apache.commons.io.version>1.3.2</org.apache.commons.io.version>
    <org.apache.commons.exec.version>1.3</org.apache.commons.exec.version>
    <org.apache.commons.jexl.version>2.1.1</org.apache.commons.jexl.version>
    <org.apache.commons.jexl3.version>3.1</org.apache.commons.jexl3.version>
    <org.apache.commons.math3.version>3.6.1</org.apache.commons.math3.version>
    <org.apache.commons.pool2.version>2.8.0</org.apache.commons.pool2.version>
    <org.apache.commons.vfs2.version>2.5.0</org.apache.commons.vfs2.version>
    <org.apache.commons.configuration2.version>2.6</org.apache.commons.configuration2.version>
    <org.apache.commons.digester3.version>3.2</org.apache.commons.digester3.version>
    <org.apache.commons.crypto.version>1.0.0</org.apache.commons.crypto.version>
    <commons-text.version>1.8</commons-text.version>
    <org.apache.commons.lang3.version>3.9</org.apache.commons.lang3.version>
    <org.apache.httpcomponents.verion>4.5.10</org.apache.httpcomponents.verion>
    <org.apache.httpclient.verion>4.4.12</org.apache.httpclient.verion>
    <!--<com.squareup.okhttp3.version>4.2.1</com.squareup.okhttp3.version> -->
    <com.jayway.jsonpath.version>2.4.0</com.jayway.jsonpath.version>
    <com.squareup.retrofit.version>2.7.0</com.squareup.retrofit.version>
    <io.opentracing.version>0.33.0</io.opentracing.version>
    <io.swagger.version>1.6.0</io.swagger.version>
    <io.netty.version>4.1.44.Final</io.netty.version>
    <io.nats.version>1.13</io.nats.version>
    <org.ow2.asm.version>6.0</org.ow2.asm.version>
    <org.apache.ws.commons.axiom.version>1.2.14</org.apache.ws.commons.axiom.version>
    <org.hsqldb.version>2.5.0</org.hsqldb.version>
    <org.javassist.version>3.26.0-GA</org.javassist.version>
    <io.cucumber.version>5.5.0</io.cucumber.version>
    <org.seedstack.version>19.11</org.seedstack.version>
    <io.vertx.version>3.8.5</io.vertx.version>
    <org.eclipse.jetty.version>9.4.26.v20200117</org.eclipse.jetty.version>
    <io.fabric8.dep.version>3.0.12</io.fabric8.dep.version>
    <io.kubernetes.version>8.0.0</io.kubernetes.version>
    <org.jboss.arquillian.testng.version>1.6.0.Final</org.jboss.arquillian.testng.version>
    <org.testng.version>7.1.0</org.testng.version>
    <org.easymock.version>4.2</org.easymock.version>
    <com.datastax.oss.version>4.5.0</com.datastax.oss.version>
    <com.graphql-java.version>14.0</com.graphql-java.version>
    <io.fares.junit.mongodb.version>1.1.0</io.fares.junit.mongodb.version>
    <redis.clients.version>2.8.1</redis.clients.version>
    <com.samskivert.version>1.15</com.samskivert.version>

    <!-- :: Maven plugin version configuration -->
    <maven.plugin.animal-sniffer.version>1.18</maven.plugin.animal-sniffer.version>
    <maven.plugin.compiler.version>3.8.0</maven.plugin.compiler.version>
    <maven.plugin.install.version>2.5.2</maven.plugin.install.version>
    <maven.plugin.source.version>3.0.1</maven.plugin.source.version>
    <maven.plugin.javadoc.version>3.0.1</maven.plugin.javadoc.version>
    <maven.plugin.license.version>3.0</maven.plugin.license.version>
    <maven.plugin.jar.version>3.1.0</maven.plugin.jar.version>
    <maven.plugin.release.version>2.5.3</maven.plugin.release.version>
    <maven.plugin.bundle.version>4.0.0</maven.plugin.bundle.version>
    <maven.plugin.centralsync.version>0.1.0</maven.plugin.centralsync.version>
    <maven.plugin.surefire.version>2.22.0</maven.plugin.surefire.version>
    <maven.plugin.scm.version>1.11.2</maven.plugin.scm.version>
    <maven.plugin.versions.version>2.7</maven.plugin.versions.version>
    <maven.plugin.shade.version>3.2.1</maven.plugin.shade.version>
    <maven.plugin.clean.version>3.0.0</maven.plugin.clean.version>
    <maven.plugin.resources.version>3.0.2</maven.plugin.resources.version>
    <maven.plugin.enforcer.version>1.4.1</maven.plugin.enforcer.version>
    <maven.plugin.dependency.version>3.0.0</maven.plugin.dependency.version>
    <!-- <maven.plugin.site.version>0.12</maven.plugin.site.version> -->
    <maven.plugin.jacoco.version>0.8.4</maven.plugin.jacoco.version>
    <maven.plugin.buildnumber.version>1.4</maven.plugin.buildnumber.version>
    <maven.plugin.sortpom.version>2.8.0</maven.plugin.sortpom.version>
    <maven.plugin.build-helper.version>3.0.0</maven.plugin.build-helper.version>
    <maven.plugin.gpg.version>1.6</maven.plugin.gpg.version>
    <maven.plugin.deploy.version>2.8.2</maven.plugin.deploy.version>
    <maven.plugin.nexus-staging.version>1.6.7</maven.plugin.nexus-staging.version>
    <maven.plugin.snyk.version>1.2.0</maven.plugin.snyk.version>
    <maven.plugin.sundr.version>0.14.3</maven.plugin.sundr.version>
    <maven.plugin.takari.version>0.3.4</maven.plugin.takari.version>
    <maven.plugin.formatter.version>2.2.0</maven.plugin.formatter.version>
    <maven.plugin.assembly.version>3.1.1</maven.plugin.assembly.version>
    <maven.plugin.cobertura.version>2.7</maven.plugin.cobertura.version>
    <maven.plugin.coveralls.version>4.3.0</maven.plugin.coveralls.version>
    <maven.plugin.sonar.version>3.7.0.1746</maven.plugin.sonar.version>
    <maven.plugin.checkstyle.version>3.1.0</maven.plugin.checkstyle.version>
    <maven.plugin.pmd.version>3.12.0</maven.plugin.pmd.version>
    <maven.plugin.findbugs.version>3.0.5</maven.plugin.findbugs.version>
    <maven.plugin.site.version>3.8.2</maven.plugin.site.version>
    <maven.plugin.project-info-reports.version>3.0.0</maven.plugin.project-info-reports.version>
    <maven.plugin.antrun.version>1.8</maven.plugin.antrun.version>
    <maven.plugin.versioneye.version>3.11.4</maven.plugin.versioneye.version>
    <maven.plugin.mock-server.version>${org.mock-server.version}</maven.plugin.mock-server.version>
    <maven.plugin.help.version>3.2.0</maven.plugin.help.version>
    <maven.plugin.fabric8.version>4.4.0</maven.plugin.fabric8.version>

    <!-- Github plugin version declaration -->
    <github.plugin.proguard.version>2.1.1</github.plugin.proguard.version>
    <github.plugin.site.version>0.12</github.plugin.site.version>

    <!-- Plugins configurations section -->
    <mvn.license.header>.mvn/licenses/apache-2.0-header</mvn.license.header>
    <mvn.formatter.configfile>.mvn/coding/eclipse-java-style.xml</mvn.formatter.configfile>
    <mvn.bom.template.filepath>file://${project.basedir}/.mvn/resources/bom.xml</mvn.bom.template.filepath>
    <mvn.checkstyle.configfile>.mvn/coding/checkstyle.xml</mvn.checkstyle.configfile>
    <mvn.sortpom.file>.mvn/resources/pom-sorter.xml</mvn.sortpom.file>
    <mvn.sort.indent>2</mvn.sort.indent>
    <mvn.debuglevel>lines,vars,source</mvn.debuglevel>
    <mvn.license.holder>${mvn.organization.name} (https://www.djanta.io)</mvn.license.holder>
    <mvn.tag.prefix>release-</mvn.tag.prefix>
    <mvn.sonatype.id>sonatype</mvn.sonatype.id>
    <mvn.sonatype.url>https://oss.sonatype.org/</mvn.sonatype.url>
    <mvn.bintray.subject>djanta</mvn.bintray.subject>
    <mvn.bintray.repo>io.djanta</mvn.bintray.repo>
    <mvn.bintray.package>community</mvn.bintray.package>
    <mvn.local.artifactory.url>http://localhost:8081</mvn.local.artifactory.url>
    <mvn.release.goals>deploy</mvn.release.goals>
    <mvn.node.version>v6.17.1</mvn.node.version>
    <mvn.npm.version>2.15.9</mvn.npm.version>
    <mvn.yarn.version>v1.17.0</mvn.yarn.version>
    <mvn.nodejs.dist>https://nodejs.org/dist/</mvn.nodejs.dist>
    <mvn.yarn.dist>https://github.com/yarnpkg/yarn/releases/download/</mvn.yarn.dist>
    <mvn.npm.dist>https://registry.npmjs.org/npm/-/</mvn.npm.dist>
    <mvn.coveralls.timestampFormat>EpochMillis</mvn.coveralls.timestampFormat>
    <mvn.jacoco.report.dir>${project.build.directory}/coverage-reports</mvn.jacoco.report.dir>
    <mvn.organization.name>DJANTA, LLC</mvn.organization.name>
    <mvn.help.evaluate>.snapshot</mvn.help.evaluate>

    <!-- Maven front end configurtion -->
    <mvn.frontend.workingdirectory>src/main/javascript/frontend</mvn.frontend.workingdirectory>
    <mvn.frontend.installdirectory>${project.build.directory}</mvn.frontend.installdirectory>
    <mvn.frontend.npm.enable>false</mvn.frontend.npm.enable>
    <mvn.frontend.yarn.enable>false</mvn.frontend.yarn.enable>

    <!-- Mockserver ports configurtion -->
    <mvn.mockserver.minport>1099</mvn.mockserver.minport>
    <mvn.mockserver.maxport>5000</mvn.mockserver.maxport>
    <mvn.mockserver.port></mvn.mockserver.port>

    <!-- run argument -->
    <mvn.frontend.npm.arugment>install</mvn.frontend.npm.arugment>
    <mvn.frontend.yarn.arugment>install</mvn.frontend.yarn.arugment>
    <mvn.frontend.bower.arugment>install</mvn.frontend.bower.arugment>
    <mvn.frontend.grunt.arugment>build</mvn.frontend.grunt.arugment>
    <mvn.frontend.gulp.arugment>build</mvn.frontend.gulp.arugment>
    <mvn.frontend.jspm.arugment>install</mvn.frontend.jspm.arugment>
    <mvn.frontend.karma.arugment></mvn.frontend.karma.arugment>
    <mvn.frontend.webpack.arugment>-p</mvn.frontend.webpack.arugment>
    <!-- Frontend config files -->

    <!-- Default values for the jacoco-maven-plugin reports -->
    <mvn.jacoco.classRatio>1.00</mvn.jacoco.classRatio>
    <mvn.jacoco.instructionRatio>0.90</mvn.jacoco.instructionRatio>
    <mvn.jacoco.methodRatio>0.95</mvn.jacoco.methodRatio>
    <mvn.jacoco.branchRatio>0.85</mvn.jacoco.branchRatio>
    <mvn.jacoco.complexityRatio>0.85</mvn.jacoco.complexityRatio>
    <mvn.jacoco.lineRatio>0.90</mvn.jacoco.lineRatio>
    <mvn.jacoco.haltOnFailure>false</mvn.jacoco.haltOnFailure>

    <!-- Plugin activation -->
    <maven.javadoc.skip>true</maven.javadoc.skip>
    <skip.integration.tests>true</skip.integration.tests>
    <skip.unit.tests>false</skip.unit.tests>
    <maven.source.attach>false</maven.source.attach>
    <maven.source.skip>false</maven.source.skip>
    <sort.createBackupFile>false</sort.createBackupFile>
  </properties>

  <url>https://github.com/djanta/djanta-java-parent</url>
  <inceptionYear>2019</inceptionYear>

  <organization>
    <name>DJANTA, LLC</name>
    <url>https://www.djanta.io/</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <!--
    <url>https://github.com/djanta/djanta-java-parent</url>
    <connection>scm:git:https://github.com/djanta/djanta-java-parent.git</connection>
    <developerConnection>scm:git:https://github.com/djanta/djanta-java-parent.git</developerConnection>
    -->
    <url>${git.url}</url>
    <connection>${git.connection}</connection>
    <developerConnection>${git.developerConnection}</developerConnection>

    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>stanislaska</id>
      <name>Stanislas Koffi ASSOUTOVI</name>
      <url>http://github.com/stanislaska</url>
      <organization>DJANTA, LLC</organization>
      <organizationUrl>http://djanta.io</organizationUrl>
      <roles>
        <role>Architect</role>
        <role>CTO</role>
        <role>Founder</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <issueManagement>
    <system>Github</system>
    <url>https://github.com/djanta/djanta-java-parent/issues</url>
  </issueManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.sourceforge.cobertura</groupId>
        <artifactId>cobertura-runtime</artifactId>
        <version>${net.sourceforge.cobertura.version}</version>
        <type>pom</type>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>net.sourceforge.cobertura</groupId>
        <artifactId>cobertura</artifactId>
        <version>${net.sourceforge.cobertura.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!-- <finalName>${project.artifactId}-${project.version}-r${buildNumber}</finalName> -->
    <finalName>${project.artifactId}-${project.version}</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.plugin.deploy.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${maven.plugin.nexus-staging.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.plugin.shade.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.plugin.project-info-reports.version}</version>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>fabric8-maven-plugin</artifactId>
          <version>${maven.plugin.fabric8.version}</version>
        </plugin>

        <!-- mvn -N io.takari:maven:wrapper -Dmaven=3.5.0 -->
        <plugin>
          <groupId>io.takari</groupId>
          <artifactId>maven</artifactId>
          <version>${maven.plugin.takari.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.plugin.compiler.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.plugin.jar.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.plugin.surefire.version}</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <trimStackTrace>false</trimStackTrace>
            <argLine>${jvm.options}</argLine>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.ow2.asm</groupId>
              <artifactId>asm</artifactId>
              <version>7.3.1</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>${maven.plugin.cobertura.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${maven.plugin.buildnumber.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${maven.plugin.jacoco.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.plugin.resources.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.plugin.enforcer.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.plugin.dependency.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>${github.plugin.site.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.plugin.clean.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${com.github.eirslett.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${maven.plugin.sonar.version}</version>
        </plugin>
        <plugin>
          <groupId>org.eluder.coveralls</groupId>
          <artifactId>coveralls-maven-plugin</artifactId>
          <version>${maven.plugin.coveralls.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven.plugin.checkstyle.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven.plugin.pmd.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${maven.plugin.findbugs.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.wvengen</groupId>
          <artifactId>proguard-maven-plugin</artifactId>
          <version>${github.plugin.proguard.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven.plugin.antrun.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.plugin.javadoc.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven.plugin.source.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-help-plugin</artifactId>
          <version>${maven.plugin.help.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <version>${maven.plugin.animal-sniffer.version}</version>
        </plugin>
        <plugin>
          <groupId>com.versioneye</groupId>
          <artifactId>versioneye-maven-plugin</artifactId>
          <version>${maven.plugin.versioneye.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <!-- Ensure main source tree compiles to Java ${main.java.version} bytecode. -->
          <execution>
            <id>default-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <source>${main.java.version}</source>
              <target>${main.java.version}</target>
              <compilerArgs>
                <compilerArg>-Xlint:all</compilerArg>
              </compilerArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>${main.signature.artifact}</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>7.3.1</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- Ensures unit tesing to be run -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <trimStackTrace>false</trimStackTrace>
          <argLine>${jvm.options}</argLine>
          <includes>
            <include>**/*Test</include>
            <include>**/*UnitTesting</include>
            <include>**/*Testing</include>
            <include>**/*TestUnit</include>
          </includes>
        </configuration>
      </plugin>

      <!-- Ensures checksums are added to published jars -->
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven.plugin.install.version}</version>
        <configuration>
          <createChecksum>true</createChecksum>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.plugin.release.version}</version>
        <configuration>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <tagNameFormat>@{project.version}</tagNameFormat>

          <!-- Beging: Extended configuration -->
          <localCheckout>true</localCheckout>
          <pushChanges>false</pushChanges>
          <mavenExecutorId>forked-path</mavenExecutorId>
          <preparationGoals>clean install</preparationGoals>
          <goals>${mvn.release.goals}</goals>
          <arguments>-Dgpg.passphrase=${env.GPG_PASSPHRASE}</arguments>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>1.9.5</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>target</directory>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven.plugin.bundle.version}</version>
        <!--
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        -->
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${maven.plugin.versions.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-plugin</artifactId>
        <version>${maven.plugin.scm.version}</version>
        <configuration>
          <tag>${mvn.tag.prefix}${project.version}</tag>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedPlugins>
                  <level>WARN</level>
                  <!--excludes>
                    <exclude>org.apache.maven.plugins:maven-verifier-plugin</exclude>
                  </excludes-->
                  <message>Please consider using the maven-invoker-plugin
                                        (http://maven.apache.org/plugins/maven-invoker-plugin/)!</message>
                </bannedPlugins>
                <requireMavenVersion>
                  <version>3.3</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${main.java.version},12)</version>
                </requireJavaVersion>
                <!--
                  <requireActiveProfile>
                      <profiles>check</profiles>
                      <message>The following profiles: (check) cannot be deactivated</message>
                  </requireActiveProfile>
                -->
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>local-artifactory</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <distributionManagement>
        <repository>
          <id>central</id>
          <name>local-releases</name>
          <url>${mvn.local.artifactory.url}/artifactory/libs-release</url>
        </repository>
        <snapshotRepository>
          <id>snapshots</id>
          <name>local-snapshots</name>
          <url>${mvn.local.artifactory.url}/artifactory/libs-snapshot</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>
    <profile>
      <id>sonatype</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>${mvn.sonatype.id}</serverId>
              <nexusUrl>${mvn.sonatype.url}</nexusUrl>
              <!-- <autoReleaseAfterClose>true</autoReleaseAfterClose> -->
            </configuration>
            <executions>
              <execution>
                <id>default-deploy</id>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <repositories>
        <repository>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
          <id>central1</id>
          <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
          <id>central2</id>
          <url>http://repo2.maven.org/maven2</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <releases>
            <enabled>false</enabled>
            <checksumPolicy>fail</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
            <checksumPolicy>fail</checksumPolicy>
          </snapshots>
          <id>central1</id>
          <url>http://repo1.maven.org/maven2</url>
        </pluginRepository>
        <pluginRepository>
          <releases>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </releases>
          <snapshots>
            <enabled>false</enabled>
            <updatePolicy>never</updatePolicy>
          </snapshots>
          <id>central2</id>
          <url>http://repo2.maven.org/maven2</url>
        </pluginRepository>
      </pluginRepositories>
      <distributionManagement>
        <repository>
          <id>sonatype</id>
          <url>${mvn.sonatype.url}service/local/staging/deploy/maven2/</url>
        </repository>
        <snapshotRepository>
          <id>sonatype</id>
          <url>${mvn.sonatype.url}content/repositories/snapshots</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>
    <profile>
      <id>bintray</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>io.zipkin.centralsync-maven-plugin</groupId>
              <artifactId>centralsync-maven-plugin</artifactId>
              <version>${maven.plugin.centralsync.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>io.zipkin.centralsync-maven-plugin</groupId>
            <artifactId>centralsync-maven-plugin</artifactId>
            <configuration>
              <subject>${mvn.bintray.subject}</subject>
              <repo>${mvn.bintray.repo}</repo>
              <packageName>${mvn.bintray.package}</packageName>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <repositories>
        <repository>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
        </repository>
      </repositories>
      <distributionManagement>
        <repository>
          <id>bintray</id>
          <name>io.djanta</name>
          <url>https://api.bintray.com/maven/${mvn.bintray.subject}/${mvn.bintray.repo}/${mvn.bintray.package}/;publish=1</url>
        </repository>
      </distributionManagement>
    </profile>
    <profile>
      <id>github</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <mvn.pkg.github.repository>djanta-java-parent</mvn.pkg.github.repository>
        <mvn.pkg.github.owner>djanta</mvn.pkg.github.owner>
      </properties>
      <repositories>
        <repository>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>central</id>
          <url>https://repo1.maven.org/maven2</url>
        </repository>
        <repository>
          <id>github</id>
          <url>https://maven.pkg.github.com/${mvn.pkg.github.owner}</url>
        </repository>
      </repositories>
      <distributionManagement>
        <repository>
          <id>github</id>
          <url>https://maven.pkg.github.com/${mvn.pkg.github.owner}/${mvn.pkg.github.repository}</url>
          <name>GitHub OWNER Apache Maven Packages</name>
        </repository>
      </distributionManagement>
    </profile>
    <profile>
      <id>exportVersion</id>
      <activation>
        <property>
          <name>exportVersion</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-help-plugin</artifactId>
              <version>${maven.plugin.help.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-help-plugin</artifactId>
            <executions>
              <execution>
                <id>version</id>
                <goals>
                  <goal>evaluate</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <output>${mvn.help.evaluate}</output>
                  <expression>project.version</expression>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>check</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <configuration>
              <encoding>${project.build.sourceEncoding}</encoding>
              <configLocation>${mvn.checkstyle.configfile}</configLocation>
              <headerLocation>${mvn.license.header}</headerLocation>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>compile</phase>
              </execution>
              <execution>
                <id>validate-main</id>
                <goals>
                  <goal>checkstyle</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <consoleOutput>true</consoleOutput>
                  <failsOnError>true</failsOnError>
                  <linkXRef>false</linkXRef>
                  <sourceDirectories>
                    <sourceDirectory>${basedir}/src/main</sourceDirectory>
                  </sourceDirectories>
                </configuration>
              </execution>
              <execution>
                <id>validate-test</id>
                <goals>
                  <goal>checkstyle</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <consoleOutput>true</consoleOutput>
                  <failsOnError>true</failsOnError>
                  <linkXRef>false</linkXRef>
                  <sourceDirectories>
                    <sourceDirectory>${basedir}/src/test</sourceDirectory>
                  </sourceDirectories>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <configuration>
              <minimumTokens>120</minimumTokens>
              <targetJdk>${maven.compiler.target}</targetJdk>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>cpd-check</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold>
              <xmlOutput>true</xmlOutput>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <!-- Jacoco Configuration -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>pre-unit-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <dumpOnExit>true</dumpOnExit>
                  <destFile>${mvn.jacoco.report.dir}/jacoco-ut.exec</destFile>
                  <propertyName>surefireArgLine</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>post-unit-test</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <dataFile>${mvn.jacoco.report.dir}/jacoco-ut.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <dumpOnExit>true</dumpOnExit>
                  <destFile>${mvn.jacoco.report.dir}/jacoco-it.exec</destFile>
                  <propertyName>failsafeArgLine</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <dataFile>${mvn.jacoco.report.dir}/jacoco-it.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>jacoco-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>CLASS</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${mvn.jacoco.classRatio}</minimum>
                        </limit>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${mvn.jacoco.instructionRatio}</minimum>
                        </limit>
                        <limit>
                          <counter>METHOD</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${mvn.jacoco.methodRatio}</minimum>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${mvn.jacoco.branchRatio}</minimum>
                        </limit>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${mvn.jacoco.lineRatio}</minimum>
                        </limit>
                        <limit>
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${mvn.jacoco.complexityRatio}</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                  <haltOnFailure>${mvn.jacoco.haltOnFailure}</haltOnFailure>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>format</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <!-- Re-format any supported file resource -->
          <plugin>
            <groupId>com.marvinformatics.formatter</groupId>
            <artifactId>formatter-maven-plugin</artifactId>
            <version>${maven.plugin.formatter.version}</version>
            <configuration>
              <lineEnding>LF</lineEnding>
              <configFile>${mvn.formatter.configfile}</configFile>
            </configuration>
            <executions>
              <execution>
                <id>validate-only</id>
                <goals>
                  <goal>format</goal>
                </goals>
                <phase>initialize</phase>
              </execution>
            </executions>
          </plugin>
          <!-- Re-sort (POM).xml -->
          <plugin>
            <groupId>com.github.ekryd.sortpom</groupId>
            <artifactId>sortpom-maven-plugin</artifactId>
            <version>${maven.plugin.sortpom.version}</version>
            <configuration>
              <keepBlankLines>true</keepBlankLines>
              <lineSeparator>\n</lineSeparator>
              <sortOrderFile>${mvn.sortpom.file}</sortOrderFile>
              <nrOfIndentSpace>${mvn.sort.indent}</nrOfIndentSpace>
            </configuration>
            <executions>
              <execution>
                <id>format</id>
                <goals>
                  <goal>sort</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>license</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>${maven.plugin.license.version}</version>
            <configuration>
              <header>${mvn.license.header}</header>
              <failIfUnknown>false</failIfUnknown>
              <failIfMissing>false</failIfMissing>
              <excludes>
                <exclude>**/.travis.yml</exclude>
                <exclude>**/.editorconfig</exclude>
                <exclude>**/.gitattributes</exclude>
                <exclude>**/.gitignore</exclude>
                <exclude>**/.mvn/**</exclude>
                <exclude>**/.maven/**</exclude>
                <exclude>**/travis/**</exclude>
                <exclude>**/mvnw*</exclude>
                <exclude>**/.idea/**</exclude>
                <exclude>**/target/**</exclude>
                <exclude>**/LICENSE</exclude>
                <exclude>**/*.md</exclude>
                <exclude>**/bnd.bnd</exclude>
                <exclude>**/.MF</exclude>
                <exclude>**/META-INF/services/**/*</exclude>
                <exclude>**/.variables</exclude>
                <exclude>**/.version</exclude>
                <exclude>**/resources/license/header.txt</exclude>
                <exclude>**/pom-old.xml</exclude>
                <exclude>**/README</exclude>
                <exclude>**/README.txt</exclude>
                <exclude>**/*/*.jsp</exclude>
                <exclude>**/*/*.jsf</exclude>
                <exclude>**/*/*.conf</exclude>
                <exclude>**/*/*.pro</exclude>
                <exclude>**/*/*.iml</exclude>
                <exclude>**/images/**/*</exclude>
                <exclude>**/img/**/*</exclude>
                <exclude>**/**/*.bak</exclude>
                <exclude>**/*/*${mvn.help.evaluate}</exclude>
              </excludes>
              <strictCheck>true</strictCheck>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin-git</artifactId>
                <version>${maven.plugin.license.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>compile-resources</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>compile</phase>
              </execution>
              <execution>
                <id>format-resources</id>
                <goals>
                  <goal>format</goal>
                </goals>
                <phase>process-resources</phase>
                <configuration>
                  <!--<failIfUnknown>${mvn.license.holder}</failIfUnknown>-->
                  <properties>
                    <company>${mvn.license.holder}</company>
                  </properties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fatjar</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-shade-plugin</artifactId>
              <version>${maven.plugin.shade.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>shade</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <!--
                    <transformers>
                        <transformer
                            implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class></Main-Class>
                            </manifestEntries>
                        </transformer>
                    </transformers>
                  -->
                  <outputFile>${project.build.directory}/${project.artifactId}-fat.jar</outputFile>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                      </excludes>
                    </filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mockserver</id>
      <activation>
        <property>
          <name>skipTests</name>
          <value>false</value>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.mock-server</groupId>
              <artifactId>mockserver-maven-plugin</artifactId>
              <version>${maven.plugin.mock-server.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${maven.plugin.build-helper.version}</version>
            <executions>
              <execution>
                <id>reserve-ports</id>
                <goals>
                  <goal>reserve-network-port</goal>
                </goals>
                <phase>process-resources</phase>
                <configuration>
                  <portNames>
                    <portName>mvn.mockserver.port</portName>
                  </portNames>
                  <minPortNumber>${mvn.mockserver.minport}</minPortNumber>
                  <maxPortNumber>${mvn.mockserver.maxport}</maxPortNumber>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-maven-plugin</artifactId>
            <configuration>
              <serverPort>${mvn.mockserver.port}</serverPort>
              <logLevel>DEBUG</logLevel>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-client-java</artifactId>
                <version>${org.mock-server.version}</version>
              </dependency>
              <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-netty</artifactId>
                <version>${org.mock-server.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>process-test-classes</id>
                <goals>
                  <goal>runForked</goal>
                </goals>
                <phase>process-test-classes</phase>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>stopForked</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.mockserver.maven.StopMockServerTestListener</value>
                </property>
              </properties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <gpg.executable>gpg</gpg.executable>
        <gpg.passphrase>${env.GPG_PASSPHRASE}</gpg.passphrase>
        <gpg.keyname>${env.GPG_KEYNAME}</gpg.keyname>
        <gpg.passphraseServerId>${gpg.passphrase}</gpg.passphraseServerId>
        <gpg.defaultKeyring>true</gpg.defaultKeyring>

        <!-- Setting for using an alternative (pub/priv) pair keys -->
        <gpg.publicKeyring>${env.GPG_PUBLIC_KEY}</gpg.publicKeyring>
        <gpg.secretKeyring>${env.GPG_PRIVATE_KEY}</gpg.secretKeyring>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-source-plugin</artifactId>
              <version>${maven.plugin.source.version}</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>${maven.plugin.javadoc.version}</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>${maven.plugin.project-info-reports.version}</version>
            </plugin>
            <plugin>
              <!-- GPG Signature on release -->
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-gpg-plugin</artifactId>
              <version>${maven.plugin.gpg.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <failOnError>false</failOnError>
              <!-- <additionalparam>-Xdoclint:all</additionalparam> -->
              <author>true</author>
              <additionalJOption>-Xdoclint:all</additionalJOption>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- GPG Signature on release -->
            <!--
              Device error fixing:
              ==> https://tutorials.technology/solved_errors/21-gpg-signing-failed-Inappropriate-ioctl-for-device.html
            -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <!--
                Source: https://github.com/samuelmeuli/action-maven-publish/issues/1
                Ubuntu: https://help.ubuntu.com/community/GnuPrivacyGuardHowto
                -->
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <failOnError>false</failOnError>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <reportSets>
              <reportSet>
                <reports>
                  <report>dependency-updates-report</report>
                  <report>plugin-updates-report</report>
                  <report>property-updates-report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <reportSets>
              <reportSet>
                <reports>
                  <report>index</report>
                  <report>licenses</report>
                  <report>dependency-info</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>versioneye</id>
      <activation>
        <property>
          <name>VERSIONEYE_APIKEY</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.versioneye</groupId>
              <artifactId>versioneye-maven-plugin</artifactId>
              <version>${maven.plugin.versioneye.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>com.versioneye</groupId>
            <artifactId>versioneye-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>update</goal>
                  <goal>securityAndLicenseCheck</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>sonar</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${maven.plugin.sonar.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>sonar</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Snyk vulnerability check -->
    <profile>
      <id>snyk</id>
      <activation>
        <property>
          <name>SNYK_TOKEN</name>
        </property>
      </activation>
      <properties>
        <io.snyk.failOnSeverity>medium</io.snyk.failOnSeverity>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>io.snyk</groupId>
              <artifactId>snyk-maven-plugin</artifactId>
              <version>${maven.plugin.snyk.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>io.snyk</groupId>
            <artifactId>snyk-maven-plugin</artifactId>
            <inherited>false</inherited>
            <configuration>
              <apiToken>${SNYK_TOKEN}</apiToken>
              <failOnSeverity>${io.snyk.failOnSeverity}</failOnSeverity>
            </configuration>
            <executions>
              <execution>
                <id>snyk-test</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
              <execution>
                <id>snyk-monitor</id>
                <goals>
                  <goal>monitor</goal>
                </goals>
                <phase>install</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cobertura</id>
      <activation>
        <file>
          <exists>src/site/resources/profile.cobertura</exists>
        </file>
      </activation>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>travis:cobertura</id>
      <activation>
        <property>
          <name>TRAVIS</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
            <!--
              <configuration>
                  <formats>
                      <format>xml</format>
                  </formats>
              </configuration>
            -->
          </plugin>
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>${maven.plugin.coveralls.version}</version>
            <configuration>
              <timestampFormat>${mvn.coveralls.timestampFormat}</timestampFormat>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>travis:jacoco</id>
      <activation>
        <property>
          <name>TRAVIS</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>${maven.plugin.coveralls.version}</version>
            <configuration>
              <timestampFormat>${mvn.coveralls.timestampFormat}</timestampFormat>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Site Publication -->
    <profile>
      <id>site</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.github.github</groupId>
              <artifactId>site-maven-plugin</artifactId>
              <version>${github.plugin.site.version}</version>
            </plugin>
            <plugin>
              <groupId>corg.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <version>${maven.plugin.site.version}</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>${maven.plugin.project-info-reports.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>site</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <configuration>
              <message>Building site for ${project.version}</message>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>site</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- FrontEnd tools configuration -->
    <profile>
      <id>frontend:npm</id>
      <activation>
        <property>
          <name>mvn.frontend.npm.enable</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/package.json</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>npm-run</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>${mvn.frontend.npm.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:yarn</id>
      <activation>
        <property>
          <name>mvn.frontend.yarn.enable</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/package.json</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <yarnVersion>${mvn.yarn.version}</yarnVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <yarnDownloadRoot>${mvn.yarn.dist}</yarnDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-yarn</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>yarn-run</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>${mvn.frontend.yarn.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:bower</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/bower.json</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>bower-run</id>
                <goals>
                  <goal>bower</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>${mvn.frontend.bower.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:grunt</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/Gruntfile.js</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>grunt-build</id>
                <goals>
                  <goal>grunt</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>${mvn.frontend.grunt.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:gulp</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/gulpfile.js</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>gulp-build</id>
                <goals>
                  <goal>gulp</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>${mvn.frontend.gulp.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:jspm</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/gulpfile.js</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>jspm-build</id>
                <goals>
                  <goal>jspm</goal>
                </goals>
                <!--<phase>generate-resources</phase>-->
                <configuration>
                  <arguments>${mvn.frontend.jspm.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:karma</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/gulpfile.js</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>karma-build</id>
                <goals>
                  <goal>karma</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <!-- <arguments>${mvn.frontend.karma.arugment}</arguments> -->
                  <karmaConfPath>src/test/javascript/karma.conf.ci.js</karmaConfPath>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>frontend:webpack</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dont-exist</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesDontExist>
                      <files>
                        <file>${mvn.frontend.workingdirectory}/webpack.config.js</file>
                      </files>
                    </requireFilesDontExist>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <nodeVersion>${mvn.node.version}</nodeVersion>
              <npmVersion>${mvn.npm.version}</npmVersion>
              <nodeDownloadRoot>${mvn.nodejs.dist}</nodeDownloadRoot>
              <npmDownloadRoot>${mvn.npm.dist}</npmDownloadRoot>
              <installDirectory>${mvn.frontend.installdirectory}</installDirectory>
              <workingDirectory>${mvn.frontend.workingdirectory}</workingDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>generate-resources</phase>
              </execution>
              <execution>
                <id>webpack-build</id>
                <goals>
                  <goal>webpack</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>${mvn.frontend.webpack.arugment}</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>manifest</id>
      <activation>
        <!--
        <file>
          <exists>src/main/resources/META-INF/MANIFEST.MF</exists>
        </file>
        -->
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jar-plugin</artifactId>
              <version>${maven.plugin.jar.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <configuration>
              <doCheck>false</doCheck>
              <doUpdate>false</doUpdate>
              <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
              <revisionOnScmFailure>true</revisionOnScmFailure>
              <buildNumberPropertyName>buildNumber</buildNumberPropertyName>
              <timestampPropertyName>timestamp</timestampPropertyName>
              <scmBranchPropertyName>scmBranch</scmBranchPropertyName>
              <timestampFormat>{0,date,yyyy-MM-dd-HH:mm:ss}</timestampFormat>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>create</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <skipIfEmpty>true</skipIfEmpty>

              <!--
                 You are using 'useDefaultManifestFile' which has been removed from the maven-jar-plugin.
                 Please see the >>Major Version Upgrade to version 3.0.0<< on the plugin site.
               <useDefaultManifestFile>true</useDefaultManifestFile>
              -->
              <forceCreation>true</forceCreation>
              <archive>
                <manifestEntries>
                  <SCM-Revision>${buildNumber}</SCM-Revision>
                  <Bundle-Version>${project.version}-t${buildNumber}</Bundle-Version>
                  <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                  <Bundle-Vendor>${mvn.organization.name}</Bundle-Vendor>
                </manifestEntries>
              </archive>
            </configuration>
            <executions>
              <execution>
                <id>default-jar</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-jar</id>
                <goals>
                  <goal>test-jar</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <!--
          <plugin>
              <artifactId>maven-shade-plugin</artifactId>
              <configuration>
                  <transformers>
                      <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                          <manifestEntries>
                              <SCM-Revision>${buildNumber}</SCM-Revision>
                              <Bundle-Version>${project.version}-t${buildNumber}</Bundle-Version>
                              <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                              <Bundle-Vendor>DJANTA, LLC</Bundle-Vendor>
                          </manifestEntries>
                      </transformer>
                      <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer">
                          &lt;!&ndash; No comment yet&ndash;&gt;
                      </transformer>
                  </transformers>
              </configuration>
              <executions>
                  <execution>
                      <phase>package</phase>
                      <goals>
                          <goal>shade</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>
        -->
        </plugins>
      </build>
    </profile>
    <!-- Development Integration Test-->
    <profile>
      <id>dit</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <include>**/*TestDit</include>
                <include>**/*TestDIT</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Framework & Feature Integration Test-->
    <profile>
      <id>fit</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <include>**/*TestFit</include>
                <include>**/*TestFIT</include>
              </includes>
            </configuration>
            <dependencies>
              <dependency>
                <!--
                  surefire uses ASM to do some bytecode magic... need to bump version to be java 11 compatible
                -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.3.1</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Pre Developement Integration Test -->
    <profile>
      <id>predit</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <!-- Include all development Integration testing -->
                <include>**/*TestDit</include>
                <include>**/*TestDIT</include>

                <!-- Include all (Functional, Framework & Feature) Integration testing -->
                <include>**/*TestFit</include>
                <include>**/*TestFIT</include>

                <!-- Include any other Pre Integration testing -->
                <include>**/*TestPredit</include>
              </includes>
            </configuration>
            <dependencies>
              <dependency>
                <!--
                    surefire uses ASM to do some bytecode magic... need to bump version to be
                    java 11 compatible
                -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.3.1</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- User Acceptance Test-->
    <profile>
      <id>uat</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <!--
                    Include all User Acceptance testing
                -->
                <include>**/*TestUat</include>
                <include>**/*TestUAT</include>
              </includes>
            </configuration>
            <dependencies>
              <dependency>
                <!--
                    surefire uses ASM to do some bytecode magic... need to bump version to be
                    java 11 compatible
                -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.3.1</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- QA Test -->
    <profile>
      <id>qa</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <include>**/*TestQa</include>
                <include>**/*TestQA</include>
              </includes>
            </configuration>
            <dependencies>
              <dependency>
                <!--
                    surefire uses ASM to do some bytecode magic... need to bump version to be
                    java 11 compatible
                -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.3.1</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Staging Test -->
    <profile>
      <id>staging</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <!--
                    Include all User Acceptance testing
                -->
                <include>**/*TestUat</include>
                <include>**/*TestUAT</include>

                <!--
                    Include all Quality (assurance) Acceptance testing
                -->
                <include>**/*TestQa</include>
                <include>**/*TestQA</include>

                <!--
                    Include any other Staging Integration testing
                -->
                <include>**/*TestStaging</include>
              </includes>
            </configuration>
            <dependencies>
              <dependency>
                <!--
                    surefire uses ASM to do some bytecode magic... need to bump version to be
                    java 11 compatible
                -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.3.1</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Infrastructure automatiion Test -->
    <profile>
      <id>iat</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <redirectTestOutputToFile>true</redirectTestOutputToFile>
              <trimStackTrace>false</trimStackTrace>
              <argLine>${jvm.options}</argLine>
              <includes>
                <include>**/*TestIat</include>
                <include>**/*TestIAT</include>
              </includes>
            </configuration>
            <dependencies>
              <dependency>
                <!--
                    surefire uses ASM to do some bytecode magic... need to bump version to be
                    java 11 compatible
                -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>7.3.1</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
